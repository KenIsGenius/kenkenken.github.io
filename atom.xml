<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>肯肯肯的競程隨筆</title>
  
  
  <link href="http://wky95.github.io/atom.xml" rel="self"/>
  
  <link href="http://wky95.github.io/"/>
  <updated>2022-06-12T13:41:26.452Z</updated>
  <id>http://wky95.github.io/</id>
  
  <author>
    <name>肯肯肯</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>APCS 2022年6月題解</title>
    <link href="http://wky95.github.io/apcs-2022-6/"/>
    <id>http://wky95.github.io/apcs-2022-6/</id>
    <published>2022-06-12T12:00:00.000Z</published>
    <updated>2022-06-12T13:41:26.452Z</updated>
    
    <content type="html"><![CDATA[<p>這次去考了 <spanclass="math inline">\(\text{APCS}\)</span>，不知道會有幾分，不過在 <spanclass="math inline">\(\text{Zerojudge}\)</span>上都過了，就來寫個題解吧。</p><h4 id="p1-數字遊戲-zerojudge_i399">p1： 數字遊戲 (<ahref="https://zerojudge.tw/ShowProblem?problemid=i399">Zerojudge_i399</a>)</h4><p>題意：給你三個數字，輸出眾數的數量，接下來將輸入的三個數字去除重複（剩下一個）後由大到小依序輸出。</p><span id="more"></span><p>解法：用一個變數存出現最多的數字出現幾次，然後直接sort再倒著輸出就好。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> cnt[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> mx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        mx = <span class="built_in">max</span>(mx, ++cnt[a[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a, a + <span class="number">3</span>);</span><br><span class="line">    cout &lt;&lt; mx &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">2</span> <span class="keyword">and</span> a[i] == a[i + <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        cout &lt;&lt; a[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="p2-字串解碼-zerojudge_i400">p2: 字串解碼 (<ahref="https://zerojudge.tw/ShowProblem?problemid=i400">Zerojudge_i400</a>)</h4><p>題意：有很多個操作，然後給你一個字串代表這些操作的結果，問你原來的字串是什麼</p><p>解法： 倒著做回去。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m, n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">tran</span><span class="params">(string &amp;s)</span> </span>&#123;</span><br><span class="line">    string tmp;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = (n + <span class="number">1</span>) / <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        tmp.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &amp; <span class="number">1</span>) tmp.<span class="built_in">push_back</span>(s[n / <span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n / <span class="number">2</span>; i++) &#123;</span><br><span class="line">        tmp.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    s = tmp;</span><br><span class="line">&#125;</span><br><span class="line">string e[<span class="number">105</span>], s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        cin &gt;&gt; e[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = m - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        string tmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = n - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (e[i][j] == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">                tmp = tmp + s[j];</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                tmp = s[j] + tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        s = tmp;</span><br><span class="line">        <span class="keyword">if</span> (cnt &amp; <span class="number">1</span>) <span class="built_in">tran</span>(s);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; s &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="p3-雷射測試-zerojudge_i401">p3： 雷射測試 (<ahref="https://zerojudge.tw/ShowProblem?problemid=i401">Zerojudge_i401</a>)</h4><p>題意： 二維坐標上有很多個斜率是 <span class="math inline">\(\pm1\)</span> 的鏡子，一開始光線從 <spanclass="math inline">\((0,0)\)</span> 往右射出去，問會反射幾次。</p><p>解法： 用 <span class="math inline">\(vector\)</span> 裝相同 <spanclass="math inline">\(x, y\)</span>的鏡子，然後排序，然後每次二分搜他的下一個鏡子是誰。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) (x).begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; row[<span class="number">60005</span>];</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; col[<span class="number">30005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, x, y, c; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; x &gt;&gt; y &gt;&gt; c;</span><br><span class="line">        y += <span class="number">30000</span>;</span><br><span class="line">        row[y].<span class="built_in">push_back</span>(&#123;x, c&#125;);</span><br><span class="line">        col[x].<span class="built_in">push_back</span>(&#123;y, c&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">60000</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">sort</span>(<span class="built_in">all</span>(row[i]));</span><br><span class="line">        <span class="keyword">if</span> (i &lt;= <span class="number">30000</span>) &#123;</span><br><span class="line">            <span class="built_in">sort</span>(<span class="built_in">all</span>(col[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> nx = <span class="number">0</span>, ny = <span class="number">30000</span>;</span><br><span class="line">    <span class="type">int</span> direct = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (direct == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> hehe = <span class="built_in">upper_bound</span>(<span class="built_in">all</span>(row[ny]), <span class="built_in">mp</span>(nx, <span class="number">1ll</span>)) - row[ny].<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span> (hehe == row[ny].<span class="built_in">size</span>()) <span class="keyword">break</span>;</span><br><span class="line">            nx = row[ny][hehe].F;</span><br><span class="line">            <span class="keyword">if</span> (row[ny][hehe].S)</span><br><span class="line">                direct = <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                direct = <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direct == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> hehe = <span class="built_in">upper_bound</span>(<span class="built_in">all</span>(col[nx]), <span class="built_in">mp</span>(ny, <span class="number">1ll</span>)) - col[nx].<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span> (hehe == col[nx].<span class="built_in">size</span>()) <span class="keyword">break</span>;</span><br><span class="line">            ny = col[nx][hehe].F;</span><br><span class="line">            <span class="keyword">if</span> (col[nx][hehe].S)</span><br><span class="line">                direct = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                direct = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direct == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="type">int</span> hehe = <span class="built_in">lower_bound</span>(<span class="built_in">all</span>(row[ny]), <span class="built_in">mp</span>(nx, <span class="number">0ll</span>)) - row[ny].<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span> (hehe == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            hehe--;</span><br><span class="line">            nx = row[ny][hehe].F;</span><br><span class="line">            <span class="keyword">if</span> (row[ny][hehe].S)</span><br><span class="line">                direct = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                direct = <span class="number">3</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direct == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="type">int</span> hehe = <span class="built_in">lower_bound</span>(<span class="built_in">all</span>(col[nx]), <span class="built_in">mp</span>(ny, <span class="number">0ll</span>)) - col[nx].<span class="built_in">begin</span>();</span><br><span class="line">            <span class="keyword">if</span> (hehe == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            hehe--;</span><br><span class="line">            ny = col[nx][hehe].F;</span><br><span class="line">            <span class="keyword">if</span> (col[nx][hehe].S)</span><br><span class="line">                direct = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                direct = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="p4-內積-zerojudge_i402">p4： 內積 (<ahref="https://zerojudge.tw/ShowProblem?problemid=i402">Zerojudge_i402</a>)</h4><p>題意： 給兩個長度分別為 <span class="math inline">\(n, m\)</span>的陣列，問子陣列(或倒過來的子陣列)內積的最大值。</p><p>解法： 令 <span class="math inline">\(a[i][j] = x[i] \timesy[j]\)</span>，然後對每個斜線算最大連續和。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) (x).begin(), (x).end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;x, vector&lt;<span class="type">int</span>&gt; &amp;y)</span> </span>&#123;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">a</span>(n, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            a[i][j] = x[i] * y[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mx = -(<span class="number">1ll</span> &lt;&lt; <span class="number">60</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n <span class="keyword">and</span> i + k &lt; m; k++) &#123;</span><br><span class="line">            sum += a[k][i + k];</span><br><span class="line">            mx = <span class="built_in">max</span>(mx, sum);</span><br><span class="line">            <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) sum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; i + k &lt; n <span class="keyword">and</span> k &lt; m; k++) &#123;</span><br><span class="line">            sum += a[i + k][k];</span><br><span class="line">            mx = <span class="built_in">max</span>(mx, sum);</span><br><span class="line">            <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) sum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">x</span><span class="params">(n)</span>, <span class="title">y</span><span class="params">(m)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> &amp;i : x) cin &gt;&gt; i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> &amp;i : y) cin &gt;&gt; i;</span><br><span class="line">    <span class="type">int</span> mx = <span class="built_in">calc</span>(x, y);</span><br><span class="line">    <span class="built_in">reverse</span>(<span class="built_in">all</span>(x));</span><br><span class="line">    mx = <span class="built_in">max</span>(mx, <span class="built_in">calc</span>(x, y));</span><br><span class="line">    cout &lt;&lt; mx &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;這次去考了 &lt;span
class=&quot;math inline&quot;&gt;\(\text{APCS}\)&lt;/span&gt;，不知道會有幾分，不過在 &lt;span
class=&quot;math inline&quot;&gt;\(\text{Zerojudge}\)&lt;/span&gt;
上都過了，就來寫個題解吧。&lt;/p&gt;
&lt;h4 id=&quot;p1-數字遊戲-zerojudge_i399&quot;&gt;p1： 數字遊戲 (&lt;a
href=&quot;https://zerojudge.tw/ShowProblem?problemid=i399&quot;&gt;Zerojudge_i399&lt;/a&gt;)&lt;/h4&gt;
&lt;p&gt;題意：
給你三個數字，輸出眾數的數量，接下來將輸入的三個數字去除重複（剩下一個）後由大到小依序輸出。&lt;/p&gt;</summary>
    
    
    
    <category term="apcs" scheme="http://wky95.github.io/categories/apcs/"/>
    
    
  </entry>
  
  <entry>
    <title>TCIRC OJ d023 習題 Q-2-14. 水槽 (108 高中全國賽) (@@)</title>
    <link href="http://wky95.github.io/tcircoj-d023/"/>
    <id>http://wky95.github.io/tcircoj-d023/</id>
    <published>2022-04-29T16:31:35.000Z</published>
    <updated>2022-04-29T16:45:14.780Z</updated>
    
    <content type="html"><![CDATA[<h4 id="題意">題意</h4><p>有一個水槽，中間有一些隔板，你會在其中兩個隔板中間注水，求每個區域有多高的水。<span id="more"></span></p><p><ahref="https://judge.tcirc.tw/ShowProblem?problemid=d023">原題連結</a></p><h4 id="想法">想法</h4><p>很明顯可以在 <span class="math inline">\(\text{O}(n)\)</span>的時間內算出每個隔板 <span class="math inline">\(i\)</span>的左邊第一個比自己高的隔板跟右邊第一個比自己高的隔板。 * 如果 <spanclass="math inline">\(w \le (r - l) \times \min(h[l],h[r])\)</span>，直接讓 <span class="math inline">\([l,r)\)</span>的每個區域變成 w / (r - l) * 如果下一個區間的寬度 <spanclass="math inline">\(\times\min(h[l],h[r])\lew\)</span>，就直接遞迴下去。 * 不然的話就代表 <spanclass="math inline">\([l,r)\)</span> 的區域的高度就是 <spanclass="math inline">\(\min(h[l],h[r])\)</span>然後往比較矮的那邊地回下去。</p><p>均攤下來時間複雜度是 <span class="math inline">\(\text{O}(n)\)</span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[<span class="number">100005</span>];</span><br><span class="line"><span class="type">int</span> a[<span class="number">100005</span>];</span><br><span class="line"><span class="type">int</span> hl[<span class="number">100005</span>], hr[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Fill</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> w)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (w &lt;= (r - l) * <span class="built_in">min</span>(h[l], h[r])) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt; r; i++) a[i] = w / (r - l);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (h[l] &lt; h[r]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (w &lt; (r - hl[l]) * h[l]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt; r; i++) a[i] = h[l];</span><br><span class="line">            <span class="built_in">Fill</span>(l - <span class="number">1</span>, l, w - h[l] * (r - l));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">Fill</span>(hl[l], r, w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (w &lt; (hr[r] - l) * h[r]) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt; r; i++) a[i] = h[r];</span><br><span class="line">            <span class="built_in">Fill</span>(r, r + <span class="number">1</span>, w - h[r] * (r - l));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">Fill</span>(l, hr[r], w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n, x, w;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    s.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (s.<span class="built_in">size</span>() <span class="keyword">and</span> h[i] &gt; h[s.<span class="built_in">top</span>()]) s.<span class="built_in">pop</span>();</span><br><span class="line">        hl[i] = s.<span class="built_in">top</span>();</span><br><span class="line">        s.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (s.<span class="built_in">size</span>()) s.<span class="built_in">pop</span>();</span><br><span class="line">    s.<span class="built_in">push</span>(n - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">2</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">while</span> (s.<span class="built_in">size</span>() <span class="keyword">and</span> h[i] &gt; h[s.<span class="built_in">top</span>()]) s.<span class="built_in">pop</span>();</span><br><span class="line">        hr[i] = s.<span class="built_in">top</span>();</span><br><span class="line">        s.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x &gt;&gt; w;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; h[i];</span><br><span class="line">    <span class="built_in">build</span>();</span><br><span class="line">    <span class="built_in">Fill</span>(x, x + <span class="number">1</span>, w);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; \n&quot;</span>[i == n - <span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;題意&quot;&gt;題意&lt;/h4&gt;
&lt;p&gt;有一個水槽，中間有一些隔板，你會在其中兩個隔板中間注水，求每個區域有多高的水。</summary>
    
    
    
    <category term="全國賽" scheme="http://wky95.github.io/categories/%E5%85%A8%E5%9C%8B%E8%B3%BD/"/>
    
    <category term="TCIRC Online Judge" scheme="http://wky95.github.io/categories/%E5%85%A8%E5%9C%8B%E8%B3%BD/TCIRC-Online-Judge/"/>
    
    
    <category term="遞迴" scheme="http://wky95.github.io/tags/%E9%81%9E%E8%BF%B4/"/>
    
  </entry>
  
  <entry>
    <title>CSES 1670 Swap Game</title>
    <link href="http://wky95.github.io/cses-1670/"/>
    <id>http://wky95.github.io/cses-1670/</id>
    <published>2022-04-03T09:32:29.000Z</published>
    <updated>2022-06-20T12:04:02.414Z</updated>
    
    <content type="html"><![CDATA[<h4 id="題目大意">題目大意</h4><p>給你一個 <span class="math inline">\(3\times 3\)</span> 的網格是<span class="math inline">\(1\sim 9\)</span> 的排列， <span id="more"></span>可以交換相鄰的格子，問你最少要幾次才能使這個網格變成左上到右下依序是<span class="math inline">\(1\sim 9\)</span>。</p><p><a href="https://cses.fi/problemset/task/1670/">原題連結</a></p><h4 id="想法">想法</h4><p>這個網格種共有 <span class="math inline">\(9!\)</span>種排列，然後把他拿去 <span class="math inline">\(\text{hash}\)</span> 模<spanclass="math inline">\(5e7+7\)</span>，會發現剛好不會碰撞，然後離散化（不然會<span class="math inline">\(\text{MLE}\)</span> ），對每種排列建邊，然後<span class="math inline">\(\text{BFS}\)</span> 就結束了。</p><p>時間複雜度 <span class="math inline">\(\text{O}(9!\times9)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">5e7</span> + <span class="number">7</span>, MAXN = <span class="number">362880</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">hsah</span><span class="params">(string &amp;s)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) res = res * <span class="number">9</span> + (s[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> res % MOD;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> st, tar, id[MOD], dp[MAXN];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; adj[MAXN];</span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; sw[<span class="number">12</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">2</span>&#125;, &#123;<span class="number">3</span>, <span class="number">4</span>&#125;, &#123;<span class="number">4</span>, <span class="number">5</span>&#125;, &#123;<span class="number">6</span>, <span class="number">7</span>&#125;, &#123;<span class="number">7</span>, <span class="number">8</span>&#125;, &#123;<span class="number">0</span>, <span class="number">3</span>&#125;, &#123;<span class="number">3</span>, <span class="number">6</span>&#125;, &#123;<span class="number">1</span>, <span class="number">4</span>&#125;, &#123;<span class="number">4</span>, <span class="number">7</span>&#125;, &#123;<span class="number">2</span>, <span class="number">5</span>&#125;, &#123;<span class="number">5</span>, <span class="number">8</span>&#125;&#125;;</span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(<span class="number">9</span>, <span class="string">&#x27;-&#x27;</span>)</span></span>;</span><br><span class="line">queue&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    string tmp = <span class="string">&quot;123456789&quot;</span>;</span><br><span class="line">    <span class="type">int</span> sz = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> id[<span class="built_in">hsah</span>(tmp)] = sz++;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">next_permutation</span>(tmp.<span class="built_in">begin</span>(), tmp.<span class="built_in">end</span>()));</span><br><span class="line">    tmp = <span class="string">&quot;123456789&quot;</span>;</span><br><span class="line">    tar = id[<span class="built_in">hsah</span>(tmp)];</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="type">int</span> hs = <span class="built_in">hsah</span>(tmp);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line">            <span class="built_in">swap</span>(tmp[sw[i].F], tmp[sw[i].S]);</span><br><span class="line">            adj[id[hs]].<span class="built_in">push_back</span>(id[<span class="built_in">hsah</span>(tmp)]);</span><br><span class="line">            <span class="built_in">swap</span>(tmp[sw[i].F], tmp[sw[i].S]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="built_in">next_permutation</span>(tmp.<span class="built_in">begin</span>(), tmp.<span class="built_in">end</span>()));</span><br><span class="line">    <span class="built_in">fill</span>(dp, dp + MAXN, <span class="number">1</span> &lt;&lt; <span class="number">30</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) cin &gt;&gt; s[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>), cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    st = id[<span class="built_in">hsah</span>(s)];</span><br><span class="line">    q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, st&#125;);</span><br><span class="line">    dp[st] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">        <span class="keyword">auto</span> [cost, t] = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (t == tar) <span class="keyword">return</span> cout &lt;&lt; cost &lt;&lt; <span class="string">&#x27;\n&#x27;</span>, <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : adj[t])</span><br><span class="line">            <span class="keyword">if</span> (dp[i] &gt; dp[t] + <span class="number">1</span>)</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;dp[i] = dp[t] + <span class="number">1</span>, i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;題目大意&quot;&gt;題目大意&lt;/h4&gt;
&lt;p&gt;給你一個 &lt;span class=&quot;math inline&quot;&gt;\(3\times 3\)&lt;/span&gt; 的網格是
&lt;span class=&quot;math inline&quot;&gt;\(1\sim 9\)&lt;/span&gt; 的排列，</summary>
    
    
    
    <category term="cses" scheme="http://wky95.github.io/categories/cses/"/>
    
    
    <category term="bfs" scheme="http://wky95.github.io/tags/bfs/"/>
    
    <category term="hash" scheme="http://wky95.github.io/tags/hash/"/>
    
  </entry>
  
  <entry>
    <title>Zerojudge f994:疊疊杯子蛋糕</title>
    <link href="http://wky95.github.io/zj-f994/"/>
    <id>http://wky95.github.io/zj-f994/</id>
    <published>2022-03-21T17:48:27.000Z</published>
    <updated>2022-04-04T14:59:51.541Z</updated>
    
    <content type="html"><![CDATA[<h4 id="題目大意">題目大意</h4><p>定義 <spanclass="math inline">\(\text{D}(l,r)=\Sigma_{i=l}^r(i-l+1)\timesa_i+b_{l-1}\times\Sigma_{i=l}^r a_i\)</span></p><p>要你找 <span class="math inline">\((l_1,r_1)\)</span> ~ <spanclass="math inline">\((l_k,r_k)\)</span>, <spanclass="math inline">\(l_1=1,r_k=n,r_i+1=l_{i+1}\)</span>，使得 <spanclass="math inline">\(\Sigma_{i=l}^k \text{D}(l_i,r_i)\)</span> 最大</p><span id="more"></span><p><ahref="https://zerojudge.tw/ShowProblem?problemid=f994">原題連結</a></p><h4 id="想法">想法</h4><p>令 <span class="math inline">\(P_i=\Sigma_{j=1}^{i}a_j\)</span>，<span class="math inline">\(Q_i=\Sigma_{j=1}^{i}a_j\times j\)</span></p><p><span class="math inline">\(dp\)</span>式顯然可以寫成 <spanclass="math inline">\(dp_i=Q_i+max_{0\le j&lt; i}((b_{j}-j)\timesP_i+dp_{j}-(b_{j}-j)\times P_{j}-Q_{j})\)</span></p><p>然後這樣就可以套進李超線段樹，但是因為查詢的範圍很大，所以要動態開點。</p><p>時間複雜度 <span class="math inline">\(\text{O}(n\log n)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">1e6</span>+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">line</span>&#123;</span><br><span class="line">    <span class="type">int</span> m,k;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">cal</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> m*x+k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tree</span>&#123;</span><br><span class="line">    line l;</span><br><span class="line">    <span class="type">int</span> ls,rs;</span><br><span class="line">&#125;st[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> siz=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> &amp;x,<span class="type">int</span> lb,<span class="type">int</span> rb,line seg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!x)&#123;</span><br><span class="line">        x=++siz,st[x].l=seg;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(lb+<span class="number">1</span>==rb)&#123;</span><br><span class="line">        <span class="keyword">if</span>(st[x].l.<span class="built_in">cal</span>(lb)&lt;seg.<span class="built_in">cal</span>(lb))st[x].l=seg;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(st[x].l.m&gt;seg.m)&#123;</span><br><span class="line">        <span class="built_in">swap</span>(st[x].l,seg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid=(lb+rb)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(st[x].l.<span class="built_in">cal</span>(mid)&lt;seg.<span class="built_in">cal</span>(mid))&#123;</span><br><span class="line">        <span class="built_in">swap</span>(st[x].l,seg);</span><br><span class="line">        <span class="built_in">add</span>(st[x].ls,lb,mid,seg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">add</span>(st[x].rs,mid,rb,seg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qry</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> lb,<span class="type">int</span> rb,<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!st[x].ls <span class="keyword">and</span> !st[x].rs)<span class="keyword">return</span> st[x].l.<span class="built_in">cal</span>(p);</span><br><span class="line">    <span class="type">int</span> mid=(lb+rb)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(p&lt;mid)<span class="keyword">return</span> <span class="built_in">max</span>(st[x].l.<span class="built_in">cal</span>(p),<span class="built_in">qry</span>(st[x].ls,lb,mid,p));</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">max</span>(st[x].l.<span class="built_in">cal</span>(p),<span class="built_in">qry</span>(st[x].rs,mid,rb,p));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> lb=<span class="number">-1e9</span>,rb=<span class="number">1e9</span>+<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n,a[MAXN],b[MAXN],P,Q,dp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,x=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        P += a[i];</span><br><span class="line">        Q += a[i]*i;</span><br><span class="line">        dp = <span class="built_in">qry</span>(<span class="number">1</span>,lb,rb,P)+Q;</span><br><span class="line">        <span class="built_in">add</span>(x,lb,rb,&#123;(b[i]-i),dp-(b[i]-i)*P-Q&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;題目大意&quot;&gt;題目大意&lt;/h4&gt;
&lt;p&gt;定義 &lt;span
class=&quot;math inline&quot;&gt;\(\text{D}(l,r)=\Sigma_{i=l}^r(i-l+1)\times
a_i+b_{l-1}\times\Sigma_{i=l}^r a_i\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;要你找 &lt;span class=&quot;math inline&quot;&gt;\((l_1,r_1)\)&lt;/span&gt; ~ &lt;span
class=&quot;math inline&quot;&gt;\((l_k,r_k)\)&lt;/span&gt;, &lt;span
class=&quot;math inline&quot;&gt;\(l_1=1,r_k=n,r_i+1=l_{i+1}\)&lt;/span&gt;，使得 &lt;span
class=&quot;math inline&quot;&gt;\(\Sigma_{i=l}^k \text{D}(l_i,r_i)\)&lt;/span&gt; 最大&lt;/p&gt;</summary>
    
    
    
    <category term="Zerojudge" scheme="http://wky95.github.io/categories/Zerojudge/"/>
    
    
    <category term="DP" scheme="http://wky95.github.io/tags/DP/"/>
    
    <category term="動態開點" scheme="http://wky95.github.io/tags/%E5%8B%95%E6%85%8B%E9%96%8B%E9%BB%9E/"/>
    
    <category term="李超線段樹" scheme="http://wky95.github.io/tags/%E6%9D%8E%E8%B6%85%E7%B7%9A%E6%AE%B5%E6%A8%B9/"/>
    
  </entry>
  
  <entry>
    <title>Zerojudge c528:相隔小於一定距離最小總和子序列</title>
    <link href="http://wky95.github.io/zj-c528/"/>
    <id>http://wky95.github.io/zj-c528/</id>
    <published>2022-03-21T13:07:00.000Z</published>
    <updated>2022-04-04T14:59:41.741Z</updated>
    
    <content type="html"><![CDATA[<h4 id="題目大意">題目大意</h4><p>給定一個長度為 <span class="math inline">\(N\)</span>的整數序列及一個正整數 <span class="math inline">\(K\)</span>，蓋掉數個數字使任意的連續 <span class="math inline">\(K\)</span>個數字都至少有一個數字被蓋掉，問蓋掉的數字的總和最小為多少？<span id="more"></span> <ahref="https://zerojudge.tw/ShowProblem?problemid=c528">原題連結</a></p><h4 id="想法">想法</h4><p>令 <span class="math inline">\(dp[i]\)</span> 是最後一個數選擇 <spanclass="math inline">\(a[i]\)</span> 的最小可能值，所以就有 <spanclass="math inline">\(dp[i]=min_{i-k\leq j&lt;i}{dp[j]}+a[i]\)</span>。</p><p>然後區間最小值可以用一個 deque 的單調對列維護。總時間複雜度：<spanclass="math inline">\(\text{O}(N)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">1000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; dq;</span><br><span class="line">    dq.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,a;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">if</span>(dq.<span class="built_in">front</span>() &lt; i-k) dq.<span class="built_in">pop_front</span>();</span><br><span class="line">        dp[i] = a + dp[dq.<span class="built_in">front</span>()];</span><br><span class="line">        <span class="keyword">while</span>(dq.<span class="built_in">size</span>() <span class="keyword">and</span> dp[dq.<span class="built_in">back</span>()] &gt; dp[i])&#123;</span><br><span class="line">            dq.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        dq.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dq.<span class="built_in">front</span>() &lt; n-k+<span class="number">1</span>)dq.<span class="built_in">pop_front</span>();</span><br><span class="line">    cout &lt;&lt; dp[dq.<span class="built_in">front</span>()] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;題目大意&quot;&gt;題目大意&lt;/h4&gt;
&lt;p&gt;給定一個長度為 &lt;span class=&quot;math inline&quot;&gt;\(N\)&lt;/span&gt;
的整數序列及一個正整數 &lt;span class=&quot;math inline&quot;&gt;\(K\)&lt;/span&gt;
，蓋掉數個數字使任意的連續 &lt;span class=&quot;math inline&quot;&gt;\(K\)&lt;/span&gt;
個數字都至少有一個數字被蓋掉，問蓋掉的數字的總和最小為多少？</summary>
    
    
    
    <category term="Zerojudge" scheme="http://wky95.github.io/categories/Zerojudge/"/>
    
    
    <category term="DP" scheme="http://wky95.github.io/tags/DP/"/>
    
    <category term="單調對列優化" scheme="http://wky95.github.io/tags/%E5%96%AE%E8%AA%BF%E5%B0%8D%E5%88%97%E5%84%AA%E5%8C%96/"/>
    
  </entry>
  
</feed>
