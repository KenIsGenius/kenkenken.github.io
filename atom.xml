<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KenIsGenius的競程隨筆</title>
  
  
  <link href="http://wky95.io/atom.xml" rel="self"/>
  
  <link href="http://wky95.io/"/>
  <updated>2022-03-21T15:11:31.994Z</updated>
  <id>http://wky95.io/</id>
  
  <author>
    <name>王開育</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Zerojudge c528:相隔小於一定距離最小總和子序列</title>
    <link href="http://wky95.io/2022/03/21/Zerojudge-c528/"/>
    <id>http://wky95.io/2022/03/21/Zerojudge-c528/</id>
    <published>2022-03-21T13:07:00.000Z</published>
    <updated>2022-03-21T15:11:31.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原題連結"><ahref="https://zerojudge.tw/ShowProblem?problemid=c528">原題連結</a></h3><h4 id="題目大意">題目大意</h4><p>給定一個長度為 <span class="math inline">\(N\)</span>的整數序列及一個正整數 <span class="math inline">\(K\)</span>，蓋掉數個數字使任意的連續 <span class="math inline">\(K\)</span>個數字都至少有一個數字被蓋掉，問蓋掉的數字的總和最小為多少？</p><h4 id="想法">想法</h4><p>另 <span class="math inline">\(dp[i]\)</span> 是最後一個數選擇 <spanclass="math inline">\(a[i]\)</span> 的最小可能值，所以就有 <spanclass="math inline">\(dp[i]=min_{i-k\leq j&lt;i}{dp[j]}+a[i]\)</span>。</p><p>然後區間最小值可以用一個 deque 的單調對列維護。總時間複雜度：<spanclass="math inline">\(\text{O}(N)\)</span></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">1000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios_base::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>),cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    deque&lt;<span class="type">int</span>&gt; dq;</span><br><span class="line">    dq.<span class="built_in">push_back</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>,a;i&lt;=n;i++)&#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">if</span>(dq.<span class="built_in">front</span>() &lt; i-k) dq.<span class="built_in">pop_front</span>();</span><br><span class="line">        dp[i] = a + dp[dq.<span class="built_in">front</span>()];</span><br><span class="line">        <span class="keyword">while</span>(dq.<span class="built_in">size</span>() <span class="keyword">and</span> dp[dq.<span class="built_in">back</span>()] &gt; dp[i])&#123;</span><br><span class="line">            dq.<span class="built_in">pop_back</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        dq.<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dq.<span class="built_in">front</span>() &lt; n-k+<span class="number">1</span>)dq.<span class="built_in">pop_front</span>();</span><br><span class="line">    cout &lt;&lt; dp[dq.<span class="built_in">front</span>()] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;原題連結&quot;&gt;&lt;a
href=&quot;https://zerojudge.tw/ShowProblem?problemid=c528&quot;&gt;原題連結&lt;/a&gt;&lt;/h3&gt;
&lt;h4 id=&quot;題目大意&quot;&gt;題目大意&lt;/h4&gt;
&lt;p&gt;給定一個長度為 &lt;span class=&quot;math i</summary>
      
    
    
    
    <category term="Zerojudge" scheme="http://wky95.io/categories/Zerojudge/"/>
    
    
    <category term="DP" scheme="http://wky95.io/tags/DP/"/>
    
    <category term="單調對列優化" scheme="http://wky95.io/tags/%E5%96%AE%E8%AA%BF%E5%B0%8D%E5%88%97%E5%84%AA%E5%8C%96/"/>
    
  </entry>
  
</feed>
